package Trabalho1;

import java.util.Random;
import java.util.Scanner;

/**
 *
 * @author 03020975
 */
public class Trabalho1 {
    private static Scanner entrada = new Scanner(System.in);
    private static int[] vetor = new int[20];
    // Objeto para gerar números aleatórios
    private static Random numero = new Random();

    public static void main(String[] args) {
        int opcao; 

        do {
            System.out.println("\n--- Menu Principal ---");
            System.out.println("1. Digitar 20 números");
            System.out.println("2. Gerar 20 números aleatórios");
            System.out.println("3. Ordenar");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");

            opcao = Integer.parseInt(entrada.nextLine());

            switch (opcao) {
                case 1:
                    Digitar20numeros(); 
                    break;

                case 2:
                    Gerar20numeros(); 
                    break;

                case 3:
                    Ordenacao(); 
                    break;

                case 4:
                    System.out.println(" Saindo do programa...");
                    break;

                default:
                    System.out.println(" Opção inválida"); 
            }

        } while (opcao != 4);

        entrada.close(); 
    }

    private static void Digitar20numeros() {
        System.out.println("\nDigite 20 números inteiros:");
        for (int i = 0; i < vetor.length; i++) {
            System.out.print("Número " + (i + 1) + " : ");
            vetor[i] = Integer.parseInt(entrada.nextLine()); // Lê e armazena no vetor
        }

        System.out.println("\nNúmeros digitados:");
        for (int i = 0; i < vetor.length; i++) {
            System.out.println("Posição[" + i + "] = " + vetor[i]);
        }
    }

    private static void Gerar20numeros() {
        System.out.println("\nGerando 20 números aleatórios entre 0 e 998:");
        for (int i = 0; i < vetor.length; i++) {
            vetor[i] = numero.nextInt(999); // Gera número aleatório
        }

        for (int i = 0; i < vetor.length; i++) {
            System.out.println("Posição[" + i + "] = " + vetor[i]);
        }
    }

    private static void Ordenacao() {
        int opcao;

        do {
            System.out.println("\n--- Menu de Ordenação ---");
            System.out.println("1. Bubble Sort");
            System.out.println("2. Insertion Sort");
            System.out.println("3. Selection Sort");
            System.out.println("4. Voltar ao Menu Principal");
            System.out.print("Escolha uma opção: ");
            opcao = Integer.parseInt(entrada.nextLine());

            switch (opcao) {
                case 1:
                    bubbleSort(); 
                    break;

                case 2:
                    insertionSort(); 
                    break;

                case 3:
                    selectionSort(); 
                    break;

                case 4:
                    System.out.println("Voltando ao menu principal...");
                    break;

                default:
                    System.out.println("Opção inválida.");
            }

        } while (opcao != 4); 
    }

    private static void bubbleSort() 
    {
    int[] copia = vetor.clone();  // Faz uma cópia do vetor
    int temp;

    System.out.println("\nBubble Sort");
    System.out.println("\nVetor original");
    for (int i = 0; i < copia.length; i++) 
    {
        System.out.println(" Posicao[" + i + "] = " + copia[i]);
    }
    //Laço externo - quantidade de passadas
    for (int i = 0; i < copia.length; i++) 
    {
        //Laço interno - compara pares adjacentes
        for (int j = 0; j < copia.length - 1; j++) 
        {
            if (copia[j] > copia[j + 1]) 
            {
                //Troca os elementos se estiverem fora de ordem
                temp = copia[j];
                copia[j] = copia[j + 1];
                copia[j + 1] = temp;
            }
        }
    }

    System.out.println("\n Vetor ordenado com Bubble Sort");
    for (int i = 0; i < copia.length; i++) 
    {
        System.out.println(" Posicao[" + i + "] = " + copia[i]);
    }
}

    private static void insertionSort() 
    {
    int[] copia = vetor.clone();  
    System.out.println("\nInsert Sort\n");

    System.out.println("Vetor Original");
    for (int i = 0; i < copia.length; i++) 
    {
        System.out.println(" Posição[" + i + "] = " + copia[i]);
    }

    for (int i = 1; i < copia.length; i++) 
    {
        int eleito = copia[i]; //valor a ser inserido
        int j = i - 1;

        //Desloca valores maiores para frente
        while (j >= 0 && copia[j] > eleito) 
        {
            copia[j + 1] = copia[j];
            j = j - 1;
        }
        //Insere o eleito na posição correta
        copia[j + 1] = eleito;
    }

    System.out.println("\n Vetor ordenado com Insert Sort");
    for (int i = 0; i < copia.length; i++) 
    {
        System.out.println(" Posição[" + i + "] = " + copia[i]);
    }
}
    
    private static void selectionSort() 
    {
    int[] copia = vetor.clone();  
    System.out.println("\nSelection Sort\n");

    System.out.println("Vetor original");
    for (int i = 0; i < copia.length; i++) 
    {
        System.out.println(" Posicao[" + i + "] = " + copia[i]);
    }

    for (int i = 0; i < copia.length - 1; i++) 
    {
        int menor = copia[i];
        int indice = i;

        //Procura o menor valor à frente
        for (int j = i + 1; j < copia.length; j++) 
        {
            if (copia[j] < menor) 
            {
                menor = copia[j];
                indice = j;
            }
        }

        //Troca o menor encontrado com o valor atual
        menor = copia[indice];//atribuindo à variável menor menor o valor que está na posição indice do array ou lista chamada copia 
                               //Ou seja, ela está pegando o elemento que está na posição indice dentro de copia e guardando esse valor em menor
        copia[indice] = copia[i];//move valor atual para onde estava o estava o menor
        copia[i] = menor;//coloca menor na posição correta
    }

    System.out.println("\n Vetor ordenado com Selection Sort");
    for (int i = 0; i < copia.length; i++)  
    {
        System.out.println(" Posicao[" + i + "] = " + copia[i]);
    }
  }
}
