import java.util.Scanner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tatiana
 */
public class ListaComprasEstatica {
    private String[] itens;
    private int tamanho;
    //Construtor da classe ListaComprasEstatica
    public ListaComprasEstatica()
    {
        this.itens = new String[10];
        this.tamanho = 0;
    }
        
    //Método principal para testar a classe ListaComprasEstatica
    public static void main(String[] args) {
        ListaComprasEstatica lista = new ListaComprasEstatica();//Cria uma nova lista de compras
        Scanner ler = new Scanner(System.in);
        int opcao;

        do {
            System.out.println("\nMenu:");
            System.out.println("1. Adicionar item");
            System.out.println("2. Remover último item");
            System.out.println("3. Exibir lista");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");
            opcao = ler.nextInt();
            ler.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 1:
                    lista.adicionarItem();
                    break;
                case 2:
                    lista.removerItem();
                    break;
                case 3:
                    lista.exibirLista();
                    break;
                case 4:
                    System.out.println("Saindo...");
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        } while (opcao != 4);

        ler.close();
    
    }

    private void exibirLista() 
    {
        if(tamanho == 0)
        {
            System.out.println(" A lista está vazia.");
        }
        else
        {
            System.out.println(" Itens na lista:");
            for(int i = 0; i < tamanho; i++)
            {
                System.out.println((i + 1 + "." + itens[i]));
            }
        }
    }

    private void removerItem() 
    {
        if(tamanho > 0)
        {
            tamanho--; //Remove o último item
            System.out.println(" Item removido: " + itens[tamanho]);
            itens[tamanho] = null;//opcional, para limpar espaço
        }
        else
        {
            System.out.println(" A lista está vazia. Nenhum item para remover.");
        }
        
    }

    private void adicionarItem() 
    {
    if (tamanho < itens.length) 
    {
        Scanner ler = new Scanner(System.in);
        System.out.print("Digite o item a ser adicionado: ");
        String item = ler.nextLine(); 

        itens[tamanho] = item; // Adiciona o item ao final da lista
        tamanho++; // Aumenta o tamanho da lista
        System.out.println("Item adicionado: " + item);
    } else 
    {
        System.out.println("A lista está cheia. Não é possível adicionar mais itens.");
        
    }
}
}



Para transformar o seu código em uma lista de compras dinâmica simples, precisamos implementar o redimensionamento do array 
quando ele estiver cheio. O código atualizado incluirá essa funcionalidade e simplificará algumas partes. Veja como fica:

import java.util.Scanner;

public class ListaComprasDinamica {
    private String[] itens;
    private int tamanho;

    // Construtor da classe ListaComprasDinamica
    public ListaComprasDinamica() {
        this.itens = new String[10]; // Capacidade inicial de 10 itens
        this.tamanho = 0; // Inicializa o tamanho da lista
    }

    // Método principal para testar a classe
    public static void main(String[] args) {
        ListaComprasDinamica lista = new ListaComprasDinamica(); // Cria uma nova lista de compras
        Scanner ler = new Scanner(System.in);
        int opcao;

        do {
            System.out.println("\nMenu:");
            System.out.println("1. Adicionar item");
            System.out.println("2. Remover último item");
            System.out.println("3. Exibir lista");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");
            opcao = ler.nextInt();
            ler.nextLine(); // Consumir a nova linha

            switch (opcao) {
                case 1:
                    lista.adicionarItem(ler); // Passando o Scanner como parâmetro
                    break;
                case 2:
                    lista.removerItem();
                    break;
                case 3:
                    lista.exibirLista();
                    break;
                case 4:
                    System.out.println("Saindo...");
                    break;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        } while (opcao != 4);

        ler.close();
    }

    // Método para exibir a lista
    private void exibirLista() {
        if (tamanho == 0) {
            System.out.println("A lista está vazia.");
        } else {
            System.out.println("Itens na lista:");
            for (int i = 0; i < tamanho; i++) {
                System.out.println((i + 1) + ". " + itens[i]);
            }
        }
    }

    // Método para remover o último item
    private void removerItem() {
        if (tamanho > 0) {
            tamanho--; // Remove o último item
            System.out.println("Item removido: " + itens[tamanho]);
            itens[tamanho] = null; // Limpa a referência (opcional)
        } else {
            System.out.println("A lista está vazia. Nenhum item para remover.");
        }
    }

    // Método para adicionar um item
    private void adicionarItem(Scanner ler) {
        if (tamanho >= itens.length) {
            redimensionarArray(); // Redimensiona o array se estiver cheio
        }
        
        System.out.print("Digite o item a ser adicionado: ");
        String item = ler.nextLine(); // Lê o item do usuário
        itens[tamanho] = item; // Adiciona o item ao final da lista
        tamanho++; // Aumenta o tamanho da lista
        System.out.println("Item adicionado: " + item);
    }

    // Método para redimensionar o array
    private void redimensionarArray() {
        String[] novoArray = new String[itens.length * 2]; // Dobra o tamanho do array
        for (int i = 0; i < itens.length; i++) {
            novoArray[i] = itens[i]; // Copia os itens para o novo array
        }
        itens = novoArray; // Atualiza a referência do array
        System.out.println("Array redimensionado para " + itens.length + " itens.");
    }
}
Encontre Mais
O que foi feito:
Redimensionamento: O método redimensionarArray foi adicionado para dobrar o tamanho do array quando ele estiver cheio.

Passagem do Scanner: O objeto Scanner é passado como um parâmetro no método adicionarItem, o que evita a criação de múltiplas
instâncias do Scanner.

Estrutura Geral: A lógica foi mantida simples e clara, mantendo a funcionalidade de adicionar, remover e exibir itens, além de 
garantir que a lista possa crescer dinamicamente.

Com essas alterações, agora você tem uma lista de compras dinâmica que pode adicionar e remover itens facilmente, e que se
ajusta automaticamente ao número de elementos. Se você precisar de mais alguma coisa, é só avisar!

Estrutura Geral: A lógica foi mantida simples e clara, mantendo a funcionalidade de adicionar, remover e exibir itens, além de 
garantir que a lista possa crescer dinamicamente.

Com essas alterações, agora você tem uma lista de compras dinâmica que pode adicionar e remover itens facilmente, e que se ajusta
automaticamente ao número de elementos. Se você precisar de mais alguma coisa, é só avisar!
